#!/bin/bash
# /usr/bin/hwd
# Hardware detect and information how to setup manually.
# 23-Feb-2006 by Markku (Rasatmakananda)<rasat@user-contributions.org>
#

[ `id -u` -ne 0 ] && {
        echo "This program must be run by the root user"
   echo "   Login root:"
   echo "   # su"
   echo "   # <root password>"
        exit 1
}

if [ -f /usr/bin/lshwd ]; then
dummy=""
else
echo "You need to install lshwd to run hwd!!"
exit
fi

if [ -f /usr/bin/mkxcfg ]; then
dummy=""
else
echo "You need to install ddcxinfo-arch to run hwd!!"
exit
fi

# Making sure pcmcia cards get detected
PCMCIAtest=$(dmesg | grep CardMgr)
if [ "$PCMCIAtest" ]; then
modprobe ds >/dev/null 2>&1
cardmgr -f >/dev/null 2>&1
fi

# ANSI COLORS
NORMAL="\033[0;39m"
# RED: Warning message
RED="\033[1;31m"
# GREEN: Success message
GREEN="\033[1;32m"
# YELLOW: Attention message
YELLOW="\033[1;33m"
# BLUE: System message
BLUE="\033[1;34m"
# LCYAN: Found devices and modules
LCYAN="\033[1;36m"

# Kernel version
KVER="$(uname -r)"
case "$KVER" in 2.6.*)
VER="2.6"
;;
esac
case "$KVER" in 2.4.*)
VER="2.4"
;;
esac

usage() {

 FOUND=""
 # echo "$0 <option>"
 echo ""
 echo -e "${LCYAN}hwd ${NORMAL}<option>"
 echo "  -s   Simple   - General hardware information."
 echo "  -e   Expert   - All detected devices and modules."
 echo "  -ec  Expertc  - With color."
 echo "  -id  ID       - Vendor and device IDs." 
 echo "  -y   System   - System information."
 echo "  -x   X sample - Generate X sample."
 echo "  -xa  X auto   - Generate and install X."
 echo "  -u   Update   - Download latest pci/pcmcia tables."
 echo "  -h   Howto    - How to configure your hardwares."
 echo "  --------------------------------------------------"
 echo "  lshwd -?      - Lshwd menu."
 echo "  mkxcfg        - X menu."
 echo "  --------------------------------------------------"
 echo "  Current PCI/USB/PCMCIA tables:"
 echo -n "  pci:    "
grep snapshot /usr/share/hwdata/pcitable
 echo -n "  usb:    "
grep snapshot /usr/share/hwdata/usbtable
 echo -n "  pcmcia: "
grep snapshot /usr/share/hwdata/pcmciatable
 echo ""
}

# SIMPLE - general hardware information
simple() {
 MODE="simple mode"
 runhwd
}

# EXPERT - list of all detected devices and modules
expert() {
clear
/usr/bin/lshwd -a -c -n
}

# EXPERTC - with colors
expertc() {
clear
/usr/bin/lshwd -a -cc -n
}

# SYSTEM - system information
system() {
  clear
  MODE="system mode"
  /usr/sbin/sys.sh
}

# X SAMPLE - generate X sample
xsample() {
  MODE="x sample mode"
  echo "hwd" > /tmp/hwd.tmp
  [ -x /usr/bin/mkxcfg ] && /usr/bin/mkxcfg -x
rm /tmp/hwd.tmp >/dev/null 2>&1
}

# X AUTO - generate and install X
xauto() {
  MODE="x auto mode"
  echo "hwd" > /tmp/hwd.tmp
  [ -x /usr/bin/mkxcfg ] && /usr/bin/mkxcfg -a
rm /tmp/hwd.tmp >/dev/null 2>&1
}

# UPDATE - Download latest pci/pcmcia tables
update() {
another=""; answer=""
while test "$answer" != "n" -a "$answer" != "N"; do
echo -e "${NORMAL}This will download latest pci/usb/pcmcia tables.${NORMAL}"
echo -n "Are you connected and ready to download (y/n)? [n] "
another=" another"
read answer
case "$answer" in y*|YA*)
echo -e "${NORMAL}Please wait...."
cd /usr/share/hwdata/
rm *.1 >/dev/null 2>&1

wget -q http://user-contributions.org/projects/lshwd/tables/pcitable
echo -n "pci "
wget -q http://user-contributions.org/projects/lshwd/tables/usbtable
echo -n "usb "
wget -q http://user-contributions.org/projects/lshwd/tables/pcmciatable
echo "pcimcia"
if [ -f /usr/share/hwdata/pcitable.1 ]; then
echo -e  "pcitable    -->${GREEN}ok${NORMAL}"
mv -f pcitable.1 pcitable
else
echo -e  "pcitable    -->${RED}no download${NORMAL}"
fi

if [ -f /usr/share/hwdata/usbtable.1 ]; then
echo -e  "usbtable    -->${GREEN}ok${NORMAL}"
mv -f usbtable.1 usbtable
else
echo -e  "usbtable    -->${RED}no download${NORMAL}"
fi

if [ -f /usr/share/hwdata/pcmciatable.1 ]; then
echo -e  "pcmciatable -->${GREEN}ok${NORMAL}"
mv -f pcmciatable.1 pcmciatable
else
echo -e  "pcmciatable -->${RED}no download${NORMAL}"
fi

echo ""
 break; ;; esac
# If no selected
echo -e "${NORMAL}"
exit
done
}

# DEVICE ID - list of detected pci, pcmcia and usb devices
device() {
  clear
  MODE="device mode"
  echo -e "${LCYAN}VENDOR & DEVICE IDs"
  echo -e "${LCYAN}Code    vend:dev  Description (module)${NORMAL}"
  /usr/bin/lshwd -a -id
  echo ""

}

# HOWTO - how to configure your hardwares
howto() {
 man howto
}

#### STARTING SIMPLE HARDWARE DETECT ######
runhwd() {
echo "hwd" > /tmp/hwd.tmp
clear

# Hwd version
clear
hwdVER="$(cat /etc/hwd/version)"
echo -e "${NORMAL}$hwdVER ($MODE)"

# Hardware detect
/usr/bin/lshwd -a -n -m > /tmp/lshwd.out | dmesg -n 1
LISTFILE=/tmp/lshwd.out

echo -e "  ${BLUE}Kernel     : ${NORMAL}$KVER"

# CPU information
echo -en "  ${BLUE}CPU & Cache:${NORMAL} "
awk -F: '/^processor/{printf "Processor"$2" is"};/^model name/{printf $2};/^vendor_id/{printf vendor};/^cpu MHz/{printf " %dMHz",int($2)};/^cache size/{printf ","$2" Cache"};/^$/{print ""}' /proc/cpuinfo 2>/dev/null
echo -en "${NORMAL}"

echo ""

# Sound card
SOUND_NAME=$(awk -F\" '/Multimedia [a|A]udio [c|C]ontroller/{print $4;exit}' $LISTFILE)
SOUND_MODULE=$(awk -F\" '/Multimedia [a|A]udio [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ "$VER" = "2.6" ]; then
if [ -n "$SOUND_NAME" ]; then
echo -e "  ${BLUE}ALSA(sound): ${NORMAL}$SOUND_NAME ${BLUE}module: ${LCYAN}$SOUND_MODULE"
else
echo -e "  ${BLUE}Soundcard  : ${NORMAL}No sound card"
fi
fi

if [ "$VER" = "2.4" ]; then
if [ -n "$SOUND_NAME" ]; then
echo -e "  ${BLUE}OSS(sound) : ${NORMAL}$SOUND_NAME ${BLUE}module: ${LCYAN}$SOUND_MODULE"
else
echo -e "  ${BLUE}Soundcard  : ${NORMAL}No sound card"
fi
fi

# Game port
PORT_NAME=$(awk -F\" '/Input [d|D]evice [c|C]ontroller/{print $4;exit}' $LISTFILE)
PORT_MODULE=$(awk -F\" '/Input [d|D]evice [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$PORT_NAME" ]; then
echo -e "  ${BLUE}Port       : ${NORMAL}$PORT_NAME ${BLUE}module: ${LCYAN}$PORT_MODULE${NORMAL}"
fi

# Video and monitor
  [ -x /usr/bin/mkxcfg ] && /usr/bin/mkxcfg -d
LISTFILE=/tmp/lshwd.out

# Hard disk

	for d in $(cd /proc/ide 2>/dev/null && echo hd[a-z])
	do
        	MODEL="$(cat /proc/ide/$d/model)"
		CAPACITYtmp="$(cat /proc/ide/$d/capacity)"
		CAPACITY=$[CAPACITYtmp/1953]
	if [ -f /proc/ide/$d/cache ]; then
		CACHE="$(cat /proc/ide/$d/cache)"
	fi
		TYPE="$(cat /proc/ide/$d/driver)"
		DEVICE="$d"
                NAME="$MODEL"
		SIZE="${CAPACITY}MB"
	if [ -f /proc/ide/$d/cache ]; then
                CACHE="/ ${CACHE}KB cache"
	fi
		if grep -q ide /proc/ide/$d/driver; then
		TYPE="(ide)"
		DRIVE="HD"
		fi
		if grep -q scsi /proc/ide/$d/driver; then
		TYPE="(scsi)"
		DRIVE="HD"
		fi
		if grep -q sata /proc/ide/$d/driver; then
		TYPE="(sata)"
		DRIVE="HD"
		fi
		if grep -q ide-cdrom /proc/ide/$d/driver; then
		TYPE="(ide)"
		DRIVE="CDROM"
		fi
		if grep -q DVD /proc/ide/$d/model; then
		TYPE="(ide)"
		DRIVE="DVDROM"
		fi
        TYPE="$TYPE"
        DRIVE="$DRIVE"
	if [ -f /proc/ide/$d/cache ]; then
	dummy=""
	else
	CACHE=""
	fi
 echo -e "  ${BLUE}Drive${TYPE} : ${NORMAL}$NAME (${LCYAN}${DRIVE}${NORMAL}) ${SIZE} ${CACHE} ${BLUE}device: ${NORMAL}${LCYAN}/dev/${DEVICE}${NORMAL}"

done

# Scsi disk
dmesg > /etc/hwd/KernMsg
awk '/SCSI|sata|SATA/' /etc/hwd/KernMsg > /tmp/dev.tmp

if grep -q sata /tmp/dev.tmp; then
	if grep -q "SCSI device" /tmp/dev.tmp; then
	TYPEscsi="(sata)"
	TYPEscsi="$TYPEscsi"
	DRIVEscsi="HD"
	DRIVEscsi="$DRIVEscsi"
	grep sda: /tmp/dev.tmp >/tmp/dev2.tmp
	TYPEsda="(scsi)"
	TYPEsda="$TYPEsda"
	NAMEsda=$(grep sectors /tmp/dev2.tmp)
	NAMEsda="$NAMEsda"
	grep sdb: /tmp/dev.tmp >/tmp/dev2.tmp
	TYPEsdb="(scsi)"
	TYPEsdb="$TYPEsdb"
	NAMEsdb=$(grep sectors /tmp/dev2.tmp)
	NAMEsdb="$NAMEsdb"
	fi
else
	if grep -q SCSI /tmp/dev.tmp; then
	TYPEscsi="(scsi)"
	TYPEscsi="$TYPEscsi"
	DRIVEscsi="HD/Storage"

	DRIVEscsi="$DRIVEscsi"
	if grep -q "SCSI device" /tmp/dev.tmp; then
	grep sda: /tmp/dev.tmp >/tmp/dev2.tmp
	TYPEsda="(scsi)"
	TYPEsda="$TYPEsda"
	NAMEsda=$(grep sectors /tmp/dev2.tmp)
	NAMEsda="$NAMEsda"
	grep sdb: /tmp/dev.tmp >/tmp/dev2.tmp
	TYPEsdb="(scsi)"
	TYPEsdb="$TYPEsdb"
	NAMEsdb=$(grep sectors /tmp/dev2.tmp)
	NAMEsdb="${NAMEsdb}"
	fi
	fi
fi

if [ -n "$NAMEsda" ]; then
echo -e "  ${BLUE}Drive${TYPEsda}: ${NORMAL}$NAMEsda"
fi

if [ -n "$NAMEsdb" ]; then
echo -e "  ${BLUE}Drive${TYPEsdb}: ${NORMAL}$NAMEsdb"
fi

# RAID
RAID_NAME=$(awk -F\" '/RAID [b|B]us [c|C]ontroller/{print $4;exit}' $LISTFILE)
RAID_MODULE=$(awk -F\" '/RAID [b|B]us [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$RAID_NAME" ]; then
echo -e "  ${BLUE}RAID       : ${NORMAL}$RAID_NAME ${BLUE}module: ${LCYAN}$RAID_MODULE${NORMAL}"
fi

# Swap
grep /dev/ /proc/swaps | awk '{ print $1 }' >/tmp/dev.tmp
grep /dev/ /proc/swaps | awk '{ print $1 " " $3 "KB" }' >/tmp/dev2.tmp

for d in $(grep "/dev/hd*" /tmp/dev.tmp 2>/dev/null)
do
DEVICE="$(grep -o "$d" /tmp/dev.tmp)"
SIZE=$(grep $d /tmp/dev2.tmp | awk '{ print $2 }')
echo -e "  ${BLUE}Swap       : ${NORMAL}Found $SIZE ${BLUE}device: ${LCYAN}$DEVICE${NORMAL}"
done

# Kernel message
dmesg > /tmp/driver.tmp
LISTDRIVER=/tmp/driver.tmp

# Floppy
FLOPPY_NAME=$(grep "Floppy" $LISTDRIVER)

if [ -n "$FLOPPY_NAME" ]; then
echo -e "  ${BLUE}Floppy     : ${NORMAL}${FLOPPY_NAME}${NORMAL}"
fi

# USB system
USB_NAME=$(awk -F\" '/USB [c|C]ontroller/{print $4;exit}' $LISTFILE)
USB_MODULE=$(awk -F\" '/USB [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$USB_NAME" ]; then
echo -e "  ${BLUE}USB        : ${NORMAL}$USB_NAME ${BLUE}module: ${LCYAN}$USB_MODULE${NORMAL}"

# USB storgae
USB_STORAGE_NAME=$(awk -F\" '/USB [m|M]ass [s|S]torage/{print $4;exit}' $LISTFILE)
USB_STORAGE_MODULE=$(awk -F\" '/USB [m|M]ass [s|S]torage/{print $6;exit}' $LISTFILE)

if [ -n "$USB_STORAGE_NAME" ]; then
echo -e "  ${BLUE}USB(drive) : ${NORMAL}$USB_STORAGE_NAME ${BLUE}module: ${LCYAN}$USB_STORAGE_MODULE${NORMAL}"
fi

# USB printer
USB_PRINTER_NAME=$(awk -F\" '/USB [p|P]rinter/{print $4;exit}' $LISTFILE)
USB_PRINTER_MODULE=$(awk -F\" '/USB [p|P]rinter/{print $6;exit}' $LISTFILE)

if [ -n "$USB_PRINTER_NAME" ]; then
echo -e "  ${BLUE}Pinter(USB): ${NORMAL}${USB_PRINTER_NAME}${BLUE} module: ${LCYAN}${USB_PRINTER_MODULE} ${NORMAL}"
fi

else
echo -e "  ${BLUE}USB        : ${NORMAL}No USB"
fi

# Printer
# PRN_DEVICE=$(awk -F\" '/lp:/{print $2;exit}' $LISTDRIVER)
# awk '/(lp:)|(lp0:)|(lp1)/' /etc/hwd/KernMsg > /tmp/dev.tmp

# PRN_DEVICElp0=$(grep "lp0: using" /tmp/dev.tmp)
# PRN_DEVICElp1=$(grep "lp1: using" /tmp/dev.tmp)

# if [ -n "$PRN_DEVICE" ]; then
# echo -e "  ${BLUE}Printer    : ${NORMAL}$PRN_DEVICE"
# fi

# Scanner
NETCARD_NAME=$(awk -F\" '/Scanner/{print $4;exit}' $LISTFILE)

 if [ -n "$SCANNER_NAME" ]; then
 echo -e "  ${BLUE}Scanner    : ${NORMAL}$SCANNER_NAME ${BLUE}device: ${LCYAN}$SCANNER_DEVICE${NORMAL}"
 fi

echo ""

# Ethernet card
FOUND="no"

ETHERNET_NAME=$(awk -F\" '/Ethernet [c|C]ontroller/{print $4;exit}' $LISTFILE)
if [ -n "$ETHERNET_NAME" ]; then
grep "Ethernet controller" $LISTFILE >/tmp/net.tmp
ETHLIST=/tmp/net.tmp
cat /tmp/net.tmp | while read LINE; do
echo "$LINE" >/tmp/net.tmp2
ETHERNET_NAME=$(awk -F\" '/Ethernet [c|C]ontroller/{print $4;exit}' /tmp/net.tmp2)
ETHERNET_MODULE=$(awk -F\" '/Ethernet [c|C]ontroller/{print $6;exit}' /tmp/net.tmp2)
ETHERNET_INTERFACE="$(awk -F: '/eth.:|tr.:/{print $1}' /proc/net/dev 2>/dev/null)"
echo -e "  ${BLUE}Ethernet   : ${NORMAL}${ETHERNET_NAME}${BLUE} module: ${LCYAN}${ETHERNET_MODULE} ${BLUE}device: ${LCYAN}$ETHERNET_INTERFACE ${NORMAL}"
FOUND="yes"
done
rm -f /tmp/net.tmp*
fi

# Network card
NETWORK_NAME=$(awk -F\" '/Network [c|C]ontroller/{print $4;exit}' $LISTFILE)
NETWORK_MODULE=$(awk -F\" '/Network [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$NETWORK_NAME" ]; then
echo -e "  ${BLUE}Network    : ${NORMAL}${NETWORK_NAME}${BLUE} module: ${LCYAN}${NETWORK_MODULE} ${NORMAL}"
FOUND="yes"
fi

# If no network card found
if [ "$FOUND" = "yes" ]; then
dummy=""
else
echo -e "  ${BLUE}Network    : ${NORMAL}No PCI card or onboard chip"
fi

# Modem
MODEM_NAME=$(awk -F\" '/Modem/{print $4;exit}' $LISTFILE)
MODEM_MODULE=$(awk -F\" '/Modem/{print $6;exit}' $LISTFILE)

if [ -n "$MODEM_NAME" ]; then
echo -e "  ${BLUE}Modem      : ${NORMAL}${MODEM_NAME}${BLUE} module/info: ${LCYAN}${MODEM_MODULE} ${NORMAL}"
fi

SERIAL_NAME=$(awk -F\" '/Serial [c|C]ontroller/{print $4;exit}' $LISTFILE)
SERIAL_MODULE=$(awk -F\" '/Serial [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$SERIAL_NAME" ]; then
echo -e "  ${BLUE}Modem      : ${NORMAL}${SERIAL_NAME}${BLUE} module/info: ${LCYAN}${SERIAL_MODULE} ${NORMAL}"
fi

COM_NAME=$(awk -F\" '/Communication [c|C]ontroller/{print $4;exit}' $LISTFILE)
COM_MODULE=$(awk -F\" '/Communication [c|C]ontroller/{print $6;exit}' $LISTFILE)

if [ -n "$COM_NAME" ]; then
echo -e "  ${BLUE}Modem      : ${NORMAL}${COM_NAME}${BLUE} module/info: ${LCYAN}${COM_MODULE} ${NORMAL}"
fi



# Firewire
FIREWIRE_NAME=$(awk -F\" '/FireWire/{print $4;exit}' $LISTFILE)
FIREWIRE_MODULE=$(awk -F\" '/FireWire/{print $6;exit}' $LISTFILE)

if [ -n "$FIREWIRE_NAME" ]; then
echo -e "  ${BLUE}Firewire   : ${NORMAL}${FIREWIRE_NAME}${BLUE} module: ${LCYAN}${FIREWIRE_MODULE} ${NORMAL}"
fi

# Pcmcia
PCMCIA_SLOT_NAME=$(awk -F\" '/CardBus [b|B]ridge/{print $4;exit}' $LISTFILE)
PCMCIA_SLOT_MODULE=$(awk -F\" '/CardBus [b|B]ridge/{print $6;exit}' $LISTFILE)

# Slot
if [ -n "$PCMCIA_SLOT_NAME" ]; then
echo -e "  ${BLUE}PCMCIA slot: ${NORMAL}${PCMCIA_SLOT_NAME}${BLUE} module: ${LCYAN}${PCMCIA_SLOT_MODULE} ${NORMAL}"

PCMCIA_NET_NAME=$(awk -F\" '/PCMCIA Network [c|C]ard/{print $4;exit}' $LISTFILE)
PCMCIA_NET_MODULE=$(awk -F\" '/PCMCIA Network [c|C]ard/{print $6;exit}' $LISTFILE)

# Network
if [ -n "$PCMCIA_NET_NAME" ]; then
echo -e "  ${BLUE}PCMCIA net : ${NORMAL}${PCMCIA_NET_NAME}${BLUE} module: ${LCYAN}${PCMCIA_NET_MODULE} ${NORMAL}"
fi

PCMCIA_CARD_NAME=$(awk -F\" '/PCMCIA Fixed [d|D]isk [c|C]ard/{print $4;exit}' $LISTFILE)
PCMCIA_CARD_MODULE=$(awk -F\" '/PCMCIA Fixed [d|D]isk [c|C]ard/{print $6;exit}' $LISTFILE)

# Fixed disk
if [ -n "$PCMCIA_CARD_NAME" ]; then
echo -e "  ${BLUE}PCMCIA card: ${NORMAL}${PCMCIA_CARD_NAME}${BLUE} module: ${LCYAN}${PCMCIA_CARD_MODULE} ${BLUE}device: ${LCYAN}/dev/sdc1 ${NORMAL}"
fi

else
echo -e "  ${BLUE}PCMCIA slot: ${NORMAL}No PCMCIA"
fi

##### END OF SIMPLE #######


# Generating howto page.
########## START HERE (be careful when adding any codes until line END OF HOWTO ####
TDATE="$(date)"

HOWTO="
.TH howto 8 
.SH NAME
howto \- How to configure your hardwares.
.SH INTRODUCTION
This page was generated by hwd dated: \fB$TDATE\fP, describing how to configure your hardwares. The detected devices and modules are divided in related categories
explaning the basic configure method using command line (CLI).
.SH CONFIGURE
Command line is for temporary configure. If you use Arch Linux, to start at boot-up do
the configure in /etc/rc.conf or '/etc/rc.local'. The rc.local is for short term and testing.

.nf
For more information and other configure files, check at:
Arch Linux Documentation - 3.1 Configuration Files
http://www.archlinux.org/docs/en/guide/install/arch-install-guide.html
.SH General:
.nf
"
echo "$HOWTO" > /usr/man/man8/howto.8

#######

echo "Kernal       : $KVER" >> /usr/man/man8/howto.8
echo -n "CPU & Cache  : " >> /usr/man/man8/howto.8
awk -F: '/^processor/{printf "Processor"$2" is"};/^model name/{printf $2};/^vendor_id/{printf vendor};/^cpu MHz/{printf " %dMHz",int($2)};/^cache size/{printf ","$2" Cache"};/^$/{print ""}' /proc/cpuinfo >> /usr/man/man8/howto.8


#######

# Sound

echo "" >> /usr/man/man8/howto.8
HOWTO="
.SH Sound:
.nf
"
echo "$HOWTO" >> /usr/man/man8/howto.8

if [ -n "$SOUND_NAME" ]; then

if [ "$VER" = "2.6" ]; then
HOWTO="
Sound card   : $SOUND_NAME
ALSA module  : $SOUND_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

if [ "$VER" = "2.4" ]; then
HOWTO="
Sound card   : $SOUND_NAME
OSS module   : $SOUND_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

HOWTO="
.fi
Command Line : modprobe $SOUND_MODULE
.nf

To setup and configure ALSA check at:
http://wiki.archlinux.org/index.php/Alsa%20setup
"
echo "$HOWTO" >> /usr/man/man8/howto.8

else
HOWTO="
No sound card.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

######
# X Windows

if [ -a /etc/X11 ]; then
if [ -f /tmp/hwd.howto1 ]; then
echo "" >> /usr/man/man8/howto.8
echo ".SH Xwindows:" >> /usr/man/man8/howto.8
echo ".nf" >> /usr/man/man8/howto.8
grep "Video Card" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
grep "Monitor" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
grep "H kHz" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
grep "V Hz" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
grep "Xserver" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
grep "Xmodule" /tmp/hwd.howto1 >> /usr/man/man8/howto.8
echo "" >> /usr/man/man8/howto.8
fi

if [ -f /tmp/hwd.howto2 ]; then
grep "Mouse" /tmp/hwd.howto2 >> /usr/man/man8/howto.8
grep -x "Mouse module" /tmp/hwd.howto2 >> /usr/man/man8/howto.8
grep "XType" /tmp/hwd.howto2 >> /usr/man/man8/howto.8
grep "Device" /tmp/hwd.howto2 >> /usr/man/man8/howto.8
fi

if [ -f /tmp/hwd.howto3 ]; then
grep "Mouse" /tmp/hwd.howto3 >> /usr/man/man8/howto.8
grep "XType" /tmp/hwd.howto3 >> /usr/man/man8/howto.8
grep "Device" /tmp/hwd.howto3 >> /usr/man/man8/howto.8
fi

[ -f /usr/X11R6/bin/xorgcfg ] && X_SERVER_COM="xorgcfg" || X_SERVER_COM="xf86cfg"

if [  -a /dev/input/mice ]; then
HOWTO="
.fi
Command Line : $X_SERVER_COM -textmode (configure tool to setup vga card,
               monitor, and mouse.
             : modprobe $USB_MODULE
             : modprobe $USB_MOUSE_MODULE
.nf
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.fi
Command Line : xf86cfg -textmode (configure tool to setup vga card,
               monitor, and mouse.
.nf
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

else
echo "" >> /usr/man/man8/howto.8
echo ".SH Xwindows:" >> /usr/man/man8/howto.8
echo ".nf" >> /usr/man/man8/howto.8
echo "No X server" >> /usr/man/man8/howto.8
fi



#########
# Hard Drivers.

HOWTO="
.SH Hard Drivers (one of your drivers as sample):
.nf

Drive${TYPE}   : $NAME (${DRIVE}) ${SIZE} ${CACHE}
Device       : /dev${DEVICE}

Command Line : mount /dev${DEVICE} /mnt/<directory>
"
echo "$HOWTO" >> /usr/man/man8/howto.8

###
# Floppy
if [ -n "$FLOPPY_NAME" ]; then
HOWTO="
.SH Floppy disk:
.nf

Floppy       : $FLOPPY_NAME
Device       : /dev/fd0

Command Line : mount /dev/fd0 /mnt/<directory>
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Floppy disk:
.nf
No disk.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi


#####

if [ -n "$USB_NAME" ]; then
HOWTO="
.SH USB System:
.nf
Module       : $USB_MODULE

Command Line : modprobe $USB_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH USB System:
.nf
No USB.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

if [ -n "$USB_STORAGE_NAME" ]; then
HOWTO="
.SH USB Driver:
.nf
Driver       : $USB_STORAGE_NAME
Module       : $USB_STORAGE_MODULE
Device       : /dev/sda1

Command Line : modprobe $USB_STORAGE_MODULE
             : mount /dev/sda1 /mnt/<directory>
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH USB Driver:
.nf
No driver.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

########
# Printer

if [ -n "$USB_PRINTER_NAME" ]; then
HOWTO="
.SH USB Printer:
.nf
Printer      : $USB_PRINTER_NAME
Module       : $USB_PRINTER_MODULE
Device       : /dev/lp

Command Line : modprobe $USB_PRINTER_MODULE
             : modprobe lp
             : modprobe parport_pc
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH USB Printer:
.nf
No printer.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

######
# Scanner

 if [ -n "$SCANNER_NAME" ]; then
HOWTO="
.SH Scanner:
.nf
Scanner      : $SCANNER_NAME
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Scanner:
.nf
No scanner.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

####
# Ethernet

ETHERNET_NAME=$(awk -F\" '/Ethernet [c|C]ontroller/{print $4;exit}' $LISTFILE)
ETHERNET_MODULE=$(awk -F\" '/Ethernet [c|C]ontroller/{print $6;exit}' $LISTFILE)
ETHERNET_INTERFACE="$(awk -F: '/eth.:|tr.:/{print $1}' /proc/net/dev 2>/dev/null)"

if [ -n "$ETHERNET_NAME" ]; then
HOWTO="
.SH Ethernet card:
.nf
Ethernet     : $ETHERNET_NAME
Module       : $ETHERNET_MODULE
Interface    : $ETHERNET_INTERFACE

Command Line : modprobe $ETHERNET_MODULE
             : dhcpcd $ETHERNET_INTERFACE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Ethernet card:
.nf
No card.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

#####
# Netcard

if [ -n "$NETWORK_NAME" ]; then
HOWTO="
.SH Network card:
.nf
Network      : $NETWORK_NAME
Module       : $NETWORK_MODULE

Command Line : modprobe $NETWORK_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Network card:
.nf
No card.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

####
# Modem

if [ -n "$MODEM_NAME" ]; then
HOWTO="
.SH Modem:
.nf
Modem        : $MODEM_NAME
Module       : $MODEM_MODULE

Command Line : modprobe $MODEM_MODULE
             : vwdial or kppp
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Modem (internal):
.nf
No internal modem.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

####
# Firewire

if [ -n "$FIREWIRE_NAME" ]; then
HOWTO="
.SH Firewire:
.nf
Firewire     : $FIREWIRE_NAME
Module       : $FIREWIRE_MODULE

Command Line : modprobe $FIREWIRE_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH Firewire:
.nf
No Firewire.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

####
# Pcmcia

if [ -n "$PCMCIA_SLOT_NAME" ]; then
HOWTO="
.SH PCMCIA Slot:
.nf
PCMCIA slot  : $PCMCIA_SLOT_NAME
Module       : $PCMCIA_SLOT_MODULE

Command Line : modprobe $PCMCIA_SLOT_MODULE
             : modprobe ds
             : cardmgr
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH PCMCIA slot:
.nf
No slot.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

###

if [ -n "$PCMCIA_NET_NAME" ]; then
HOWTO="
.SH PCMCIA net card:
.nf
PCMCIA net   : $PCMCIA_NET_NAME
Module       : $PCMCIA_NET_MODULE

Command Line : modprobe $PCMCIA_NET_MODULE
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH PCMCIA net card:
.nf
No card.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

###

if [ -n "$PCMCIA_CARD_NAME" ]; then
HOWTO="
.SH PCMCIA fixed disk card:
.nf
PCMCIA net   : $PCMCIA_CARD_NAME
Module       : $PCMCIA_CARD_MODULE
Device       : /dev/sdc1

Command Line : modprobe $PCMCIA_CARD_MODULE
             : mount /dev/sdc1 /mnt/<directory>
"
echo "$HOWTO" >> /usr/man/man8/howto.8
else
HOWTO="
.SH PCMCIA fixed disk card:
.nf
No card.
"
echo "$HOWTO" >> /usr/man/man8/howto.8
fi

####

HOWTO="
.SH SEE ALSO

.nf
View all detected pci and usb devices '\fBhwd -v\fP'
View system information '\fBhwd -y\fP'

Arch Linux Documentation
http://www.archlinux.org/docs/en/

Arch Linux Wiki - Documents
http://wiki.archlinux.org/

.SH (quit/exit = q)


"
echo "$HOWTO" >> /usr/man/man8/howto.8

############################## END OF HOWTO ######

echo -e "  ${BLUE}-----------:${NORMAL}"
echo -e "  ${BLUE}Menu       : ${NORMAL}Hwd: ${LCYAN}hwd${NORMAL}, Lshwd: ${LCYAN}lshwd -?${NORMAL}, X: ${LCYAN}mkxcfg ${NORMAL}"
echo -e "  ${BLUE}X sample   : ${NORMAL}Generate X sample: ${LCYAN}hwd -x ${NORMAL}"
echo -e "  ${BLUE}Howto      : ${NORMAL}View howto: ${LCYAN}hwd -h ${NORMAL}"

# Making sure usb mouse and other hardwares are working at first run.
# modprobe uhci_hcd >/dev/null 2>&1
# modprobe ohci_hcd >/dev/null 2>&1
# modprobe usbhid >/dev/null 2>&1
# modprobe sd_mod >/dev/null 2>&1

echo ""
rm /tmp/hwd.tmp >/dev/null 2>&1
}

case $1 in
 -s) simple ;;
 -e) expert ;;
 -ec) expertc ;;
 -y) system ;;
 -id) device ;;
 -x) xsample ;;
 -xa) xauto ;;
 -u) update ;;
 -h) howto ;;
 *) usage
  exit 0
  ;;
esac
